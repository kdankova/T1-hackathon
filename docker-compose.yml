version: '3.8'

services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: rag-backend
    ports:
      - "8000:8000"
    environment:
      - API_KEY=${API_KEY}
      - LLM_BASE_URL=${LLM_BASE_URL:-https://llm.t1v.scibox.tech/v1}
      - LLM_MODEL=${LLM_MODEL:-Qwen2.5-72B-Instruct-AWQ}
      - DATABASE_URL=sqlite+aiosqlite:///./data/feedback.db
    volumes:
      - ./backend/data:/app/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: rag-frontend
    ports:
      - "8501:8501"
    environment:
      - API_BASE_URL=http://backend:8000
      - API_TIMEOUT=120
    depends_on:
      - backend
    restart: unless-stopped
    command: ["python3.13", "-m", "streamlit", "run", "operator_app.py", "--server.port=8501", "--server.address=0.0.0.0"]

  moderator:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: rag-moderator
    ports:
      - "8502:8502"
    environment:
      - API_BASE_URL=http://backend:8000
      - API_TIMEOUT=120
    depends_on:
      - backend
    restart: unless-stopped
    command: ["python3.13", "-m", "streamlit", "run", "moderator_app.py", "--server.port=8502", "--server.address=0.0.0.0"]

networks:
  default:
    name: rag-network


